{"version":3,"sources":["App.js","playlist.js","images/checkbox--unchecked.svg","images/checkbox--checked.svg","images/podcast-cover.png","reportWebVitals.js","index.js"],"names":["previousClick","playlist","document","title","App","useState","Array","length","fill","playlistToggle","setPlaylistToggle","handleBoxClick","event","clickedIndex","parseInt","currentTarget","value","newArray","undefined","shiftKey","sort","start","end","map","item","index","forEach","element","currentTrackName","querySelector","classList","add","remove","getIcon","checked","unchecked","className","id","src","cover","alt","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0KASIA,E,sDCTSC,G,MAAW,CACtB,eACA,kCACA,+BACA,0CACA,8CACA,4BACA,4BACA,uCACA,oCACA,mCCVa,MAA0B,gDCA1B,MAA0B,8CCA1B,MAA0B,0C,OJOzCC,SAASC,MAAQ,yBA6EFC,MA1Ef,WAEE,MAA0CC,mBAASC,MAAML,EAASM,QAAQC,MAAK,IAA/E,mBAAKC,EAAL,KAAqBC,EAArB,KAEA,SAASC,EAAeC,GACtB,IAAIC,EAAeC,SAASF,EAAMG,cAAcC,MAAO,IACnDC,EAAW,GAEf,QAAuBC,IAAlBlB,EAA+BY,EAAMO,SAAU,CAGlD,MAAqB,CAACN,EAAcb,GAAeoB,OAAnD,mBAAOC,EAAP,KAAcC,EAAd,MAEAL,EAAQ,YAAOR,IACND,MAAK,EAAMa,EAAOC,EAAM,QAEjCL,EAAWR,EAAec,KAAI,SAACC,EAAMC,GACnC,OAAIZ,IAAiBY,GACnBzB,EAAgByB,GACRhB,EAAegB,IAElBhB,EAAegB,MAK1Bf,EAAkB,YAAIO,IAIpBjB,EADEiB,EAASJ,GACKA,OAEAK,EAGlBD,EAASS,SAAQ,SAACC,EAASF,GACzB,IAAMG,EAAmB1B,SAAS2B,cAAc,SAAWJ,GACvDE,EACFC,EAAiBE,UAAUC,IAAI,UAE/BH,EAAiBE,UAAUE,OAAO,aAKxC,SAASC,EAAQR,GACf,OAAIhB,EAAegB,GACVS,EAEFC,EAGT,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKC,GAAG,QAAR,SACE,qBAAKC,IAAKC,EAAOH,UAAU,QAAQI,IAAI,8BAEzC,sBAAKH,GAAG,WAAR,UACE,mBAAGD,UAAU,UAAb,sDACCnC,EAASsB,KAAI,SAACI,EAASF,GAAV,OACZ,oBAAGW,UAAU,QAAb,UACE,wBAAQC,GAAIZ,EAAOT,MAAOS,EAAOgB,QAAS9B,EAA1C,SACE,qBAAK2B,IAAKL,EAAQR,GAAQe,IAAI,eAEhC,sBAAMH,GAAI,QAAUZ,EAAOW,UAAU,aAArC,SACGT,MALqBF,aK1DrBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnD,SAASoD,eAAe,SAM1BZ,M","file":"static/js/main.f7e20bb7.chunk.js","sourcesContent":["import \"./App.css\";\nimport { playlist } from \"./playlist.js\";\nimport unchecked from \"./images/checkbox--unchecked.svg\";\nimport checked from \"./images/checkbox--checked.svg\";\nimport { useState } from \"react\";\nimport cover from \"./images/podcast-cover.png\";\n\ndocument.title = \"Compressedᶠᵐ\";\n\nlet previousClick;\nfunction App() {\n  // create an array that will hold the toggle status of all items\n  let [playlistToggle, setPlaylistToggle] = useState(Array(playlist.length).fill(false));\n\n  function handleBoxClick(event) {\n    let clickedIndex = parseInt(event.currentTarget.value, 10);\n    let newArray = [];\n\n    if ((previousClick !== undefined) & event.shiftKey) {\n      //Shift click when a previous click was\n\n      const [start, end] = [clickedIndex, previousClick].sort();\n\n      newArray = [...playlistToggle];\n      newArray.fill(true, start, end + 1);\n    } else {\n      newArray = playlistToggle.map((item, index) => {\n        if (clickedIndex === index) {\n          previousClick = index;\n          return !playlistToggle[index];\n        }\n        return playlistToggle[index];\n      });\n    }\n\n    //update the playlist\n    setPlaylistToggle([...newArray]);\n\n    // if the current click was a \"check\" then assign index to previousClick\n    if (newArray[clickedIndex]) {\n      previousClick = clickedIndex;\n    } else {\n      previousClick = undefined;\n    }\n\n    newArray.forEach((element, index) => {\n      const currentTrackName = document.querySelector(\"#track\" + index);\n      if (element) {\n        currentTrackName.classList.add(\"strike\");\n      } else {\n        currentTrackName.classList.remove(\"strike\");\n      }\n    });\n  }\n\n  function getIcon(index) {\n    if (playlistToggle[index]) {\n      return checked;\n    }\n    return unchecked;\n  }\n\n  return (\n    <div className=\"App\">\n      <div id=\"cover\">\n        <img src={cover} className=\"cover\" alt=\"Compressed FM Album Art\"></img>\n      </div>\n      <div id=\"playlist\">\n        <p className=\"heading\">LISTEN TO ALL THE COMPRESSED.FM EPISODES</p>\n        {playlist.map((element, index) => (\n          <p className=\"track\" key={index}>\n            <button id={index} value={index} onClick={handleBoxClick}>\n              <img src={getIcon(index)} alt=\"checkbox\"></img>\n            </button>\n            <span id={\"track\" + index} className=\"track-name\">\n              {element}\n            </span>\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const playlist = [\r\n  \"1 || Trailer\",\r\n  \"2 || James Q Quick Origin Story\",\r\n  \"3 || Amy Dutton Origin Story\",\r\n  \"4 || Starting a New Development Project\",\r\n  \"5 || How do you Start a New Design Project?\",\r\n  \"6 || Freelancing (Part 1)\",\r\n  \"7 || Freelancing (Part 2)\",\r\n  \"8 || The Tech Behind jamesqquick.com\",\r\n  \"9 || The Tech Behind SelfTeach.me\",\r\n  \"10 || Tech Behind SelfTeach.me\",\r\n];\r\n","export default __webpack_public_path__ + \"static/media/checkbox--unchecked.ee476e34.svg\";","export default __webpack_public_path__ + \"static/media/checkbox--checked.562eef36.svg\";","export default __webpack_public_path__ + \"static/media/podcast-cover.f0dabcd9.png\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}